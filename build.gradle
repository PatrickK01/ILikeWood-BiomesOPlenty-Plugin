buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mc_version}-7.0.0.1"
group = 'yamahari.ilikewoodxbiomesoplenty' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'ilikewoodxbiomesoplenty'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    flatDir {
        dir 'build/libs'
    }
}

sourceSets {
    main {
        java{
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources', 'src/data/resources']
        }
    }
}


processResources {
    copy {
        from 'src/data/resources/assets/ilikewood/lang'
        into 'src/data/resources/assets/ilikewoodxbiomesoplenty/lang'
    }
    delete 'src/data/resources/assets/ilikewood/lang'
}

configurations {
    ilikewood
    runtimeOnly.extendsFrom(ilikewood)
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${fg_version}"

    compileOnly fg.deobf("build.libs:ilikewood:${mc_version}-${ilw_version}:api")

    ilikewood fg.deobf("build.libs:ilikewood:${mc_version}-${ilw_version}")

    runtimeOnly fg.deobf("build.libs:BiomesOPlenty:${mc_version}-${bop_version}:universal")
}

minecraft {
    mappings channel: 'official', version: "${mc_version}"

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                ilikewoodxbiomesoplenty {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                ilikewoodxbiomesoplenty {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'ilikewood.datagen.modid', 'biomesoplenty'
            args '--mod', 'ilikewood',
                    '--all',
                    '--output', file('src/data/resources/'),
                    '--existing', file('src/main/resources/'),
                    '--existing', configurations.ilikewood.asPath

            mods {
                ilikewoodxbiomesoplenty {
                    source sourceSets.main
                }
            }
        }
    }
}

jar {
    sourceSets.main.resources {
        exclude 'assets/biomesoplenty/**'
        exclude '.cache'
    }
    manifest {
        attributes([
                "Specification-Title"     : "ilikewoodxbiomesoplenty",
                "Specification-Vendor"    : "yamahari",
                "Specification-Version"   : "${version}",
                "Implementation-Title"    : "ilikewoodxbiomesoplenty",
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "yamahari",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}